(function() {var implementors = {
"embedded_hal_nb":[["impl&lt;Word, Error: <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.Error.html\" title=\"trait embedded_hal_nb::serial::Error\">Error</a>&gt; Write for dyn <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.Write.html\" title=\"trait embedded_hal_nb::serial::Write\">Write</a>&lt;Word, Error = Error&gt; + '_<div class=\"where\">where\n    Word: Copy + From&lt;u8&gt;,</div>"]],
"esp_idf_hal":[["impl&lt;'d&gt; Write for <a class=\"struct\" href=\"esp_idf_hal/uart/struct.UartDriver.html\" title=\"struct esp_idf_hal::uart::UartDriver\">UartDriver</a>&lt;'d&gt;"],["impl&lt;'d&gt; Write for <a class=\"struct\" href=\"esp_idf_hal/uart/struct.UartTxDriver.html\" title=\"struct esp_idf_hal::uart::UartTxDriver\">UartTxDriver</a>&lt;'d&gt;"]],
"heapless":[["impl&lt;const N: usize&gt; Write for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;"],["impl&lt;const N: usize&gt; Write for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;u8, N&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()